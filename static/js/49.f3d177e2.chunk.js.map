{"version":3,"file":"static/js/49.f3d177e2.chunk.js","mappings":"6KACA,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA6G,0BAA7G,EAAgJ,wB,UCAhJ,EAA+B,mC,SCU/B,EARqB,SAAAA,GACnB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAASC,GAAE,mBAAcH,EAAMI,IAA/B,SAAsCJ,EAAMK,UCLlD,EAA0B,yBCO1B,EANgB,SAAAL,GACd,OACE,eAAIC,UAAWC,EAAf,SAAgCF,EAAMM,Q,sCCApCC,GAAeC,EAAAA,EAAAA,GAAU,KAgB/B,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,mBAAhC,EAdwB,SAAAV,GACtB,OACE,kBAAMW,SAAUX,EAAMY,aAAtB,WACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUV,GACrBF,KAAK,iBACLa,YAAY,wBAEd,mDCWN,EArBgB,SAAAlB,GAMd,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGF,EAAMmB,cAAcC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAA4BjB,GAAIiB,EAAKjB,GAAIC,KAAMgB,EAAKhB,MAAjCgB,EAAKjB,UAE3D,iBAAKH,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGF,EAAMsB,SAASF,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAuBf,KAAMe,EAAKf,MAApBe,EAAKjB,UAEjD,SAAC,EAAD,CAAiBO,SAbI,SAAAY,GACzBvB,EAAMwB,cAAcD,EAAOE,0B,oBCO/B,GACEC,E,QAAAA,KACEC,EAAAA,EAAAA,KAXoB,SAAAC,GACtB,MAAO,CACLT,cAAeS,EAAMC,QAAQV,cAC7BG,SAAUM,EAAMC,QAAQP,SACxBQ,eAAgBF,EAAMC,QAAQC,kBAOL,CACvBN,cAAeO,EAAAA,KAEjBC,EAAAA,EALJ,CAMIC,I,+KCnBEC,EAAc,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAASpC,GAAW,YACzCqC,EAAWD,EAAKE,OAASF,EAAKG,QAEpC,OACE,iBAAKtC,UAAS,UAAKC,EAAAA,EAAAA,YAAL,YAA2BmC,EAAWnC,EAAAA,EAAAA,MAAe,IAAnE,UACGF,EAAMwC,SACNH,IAAY,0BAAOD,EAAKE,YAKlBvB,EAAW,SAAAf,GACtB,IAAOmC,EAA6BnC,EAA7BmC,MAAgBM,GAAazC,EAAtBoC,MAAd,OAAoCpC,EAApC,IACA,OACE,SAACkC,GAAD,kBAAiBlC,GAAjB,cACE,uCAAcmC,GAAWM,QAKlBC,EAAQ,SAAA1C,GACnB,IAAOmC,EAA6BnC,EAA7BmC,MAAgBM,GAAazC,EAAtBoC,MAAd,OAAoCpC,EAApC,IACA,OACE,SAACkC,GAAD,kBAAiBlC,GAAjB,cACE,oCAAWmC,GAAWM,S,gECvBtBE,EAAkB,SAAAf,GAAK,MAAK,CAChCgB,OAAQhB,EAAMiB,KAAKD,SAiBrB,IAdyB,SAAAE,GAWvB,OAAOnB,EAAAA,EAAAA,IAAQgB,EAAiB,GAAzBhB,EATmB,SAAA3B,GAExB,OAAKA,EAAM4C,QAIJ,SAACE,GAAD,UAAe9C,KAHb,SAAC,KAAD,CAAUG,GAAG,gB,4ECZnB,IAAMc,EAAW,SAAA8B,GACtB,IAAIA,EAGJ,MAAO,qBAGIvC,EAAY,SAAAA,GAAS,OAAI,SAAAuC,GACpC,GAAIA,EAAMC,OAASxC,EACjB,MAAM,kBAAN,OAAyBA,EAAzB,kB,mBCRJ,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB","sources":["webpack://samurai-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-app-1/./src/components/Dialogs/Interlocutor/Interlocutor.module.css?d49f","components/Dialogs/Interlocutor/Interlocutor.jsx","webpack://samurai-app-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/SendMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControl/FormsControl.jsx","hoc/withAuthRedirect.jsx","utils/fieldValidators/validators.js","webpack://samurai-app-1/./src/components/common/FormsControl/FormsControl.module.css?07ef"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__CS-Z2\",\"interlocutors\":\"Dialogs_interlocutors__e4iUV\",\"messages\":\"Dialogs_messages__G73Nw\",\"dialog\":\"Dialogs_dialog__l-jex\"};","// extracted by mini-css-extract-plugin\nexport default {\"interlocutor\":\"Interlocutor_interlocutor__wXtUV\",\"active\":\"Interlocutor_active__enZZR\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from './Interlocutor.module.css';\r\n\r\nconst Interlocutor = props => {\r\n  return (\r\n    <li className={styles.interlocutor}>\r\n      <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Interlocutor;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__IDsJI\"};","import styles from './Message.module.css';\r\n\r\nconst Message = props => {\r\n  return (\r\n    <li className={styles.message}>{props.text}</li>\r\n  );\r\n};\r\n\r\nexport default Message;","import { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../utils/fieldValidators/validators';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst SendMessageForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field \r\n        component={Textarea}\r\n        validate={[required, maxLength100]}\r\n        name='newMessageBody' \r\n        placeholder='Enter your message'\r\n      />\r\n      <button>Send Message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({form: 'SendMessageForm'})(SendMessageForm);","import styles from './Dialogs.module.css';\r\nimport Interlocutor from './Interlocutor/Interlocutor';\r\nimport Message from './Message/Message';\r\nimport SendMessageForm from './SendMessageForm';\r\n\r\nconst Dialogs = props => {\r\n\r\n  const sendMessageHandler = values => {\r\n    props.onSendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <ul className={styles.interlocutors}>\r\n        {props.interlocutors.map(item => <Interlocutor key={item.id} id={item.id} name={item.name} />)}\r\n      </ul>\r\n      <div className={styles.dialog}>\r\n        <ul className={styles.messages}>\r\n          {props.messages.map(item => <Message key={item.id} text={item.text} />)}\r\n        </ul>\r\n        <SendMessageForm onSubmit={sendMessageHandler} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessageAC } from \"../../store/actionCreators\";\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    interlocutors: state.dialogs.interlocutors,\r\n    messages: state.dialogs.messages,\r\n    newMessageText: state.dialogs.newMessageText,\r\n  };\r\n};\r\n\r\n\r\nexport default (\r\n  compose(\r\n    connect(mapStateToProps, {\r\n      onSendMessage: sendMessageAC,\r\n    }),\r\n    withAuthRedirect,\r\n  )(Dialogs)\r\n);","import styles from './FormsControl.module.css';\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n  const hasError = meta.error && meta.touched;\r\n\r\n  return (\r\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const {input, meta, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const {input, meta, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  );\r\n};","import { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = Component => {\r\n\r\n  const RedirectComponent = props => {\r\n\r\n    if (!props.isAuth) {\r\n      return <Navigate to='/login' />;\r\n    }\r\n  \r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps, {})(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;","export const required = value => {\r\n  if (value) {\r\n    return;\r\n  }\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLength = maxLength => value => {\r\n  if (value.length > maxLength) {\r\n    return `Maximum length ${maxLength} characters`;\r\n  }\r\n  return;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__-hg20\",\"error\":\"FormsControl_error__Br7aE\",\"formSummaryError\":\"FormsControl_formSummaryError__8FZdP\"};"],"names":["props","className","styles","to","id","name","text","maxLength100","maxLength","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","interlocutors","map","item","messages","values","onSendMessage","newMessageBody","compose","connect","state","dialogs","newMessageText","sendMessageAC","withAuthRedirect","Dialogs","FormControl","input","meta","hasError","error","touched","children","restProps","Input","mapStateToProps","isAuth","auth","Component","value","length"],"sourceRoot":""}